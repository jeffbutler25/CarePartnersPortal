@page "/Admin/AddPassword"
@page "/Admin/AddPassword/{task}/{ID}"
@layout MainLayoutAdmin
@inject DBContext db
@inject NavigationManager nav
<h3>Add Password</h3>


<EditForm Model="@tmppw">
    <InputNumber @bind-Value="@searchcode" @onkeypress="FilterList"></InputNumber>
    <table class="table">
        <thread>
            <tr style="text-align:center">
                <th>Code</th>
                <th>Password</th>
                <th>Access</th>
                <th>Expiry</th>
                <th>Action</th>
            </tr>
            @foreach (TempPW pw in pwds)
            {
                if (Task == "edit" && pw.ID == Int32.Parse(ID))
                {
                    <tr>
                        <td>@pw.Code</td>
                        <td>@EncryptionService.DecodeString(pw.Password)</td>
                        <InputText class="form-control" @bind-Value="pw.Access" />
                        <td>@pw.DateTimeExpiry</td>
                        <td><button class="btn btn-primary btn-sm" @onclick="e => UpdatePW(pw)">Update</button> <button class="btn btn-primary btn-sm" @onclick="@(e => DeletePW(pw))">Delete</button></td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td>@pw.Code</td>
                        <td>@pw.Password</td>
                        <td>@pw.Access</td>
                        <td>@pw.DateTimeExpiry</td>
                        <td><button class="btn btn-primary btn-sm" @onclick="e => EditPW(pw)">Edit</button></td>
                    </tr>
                }
            }
            @if (Task != "edit")
            {
                <tr>
                    <td>@tmppw.Code</td>
                    <td><InputText class="form-control" @bind-Value="@tmppw.Password" /></td>
                    <td><InputText class="form-control" @bind-Value="@tmppw.Access" /></td>
                    <td><button class="btn btn-primary btn-sm" @onclick="e => AddPW(tmppw)">Add</button></td>
                </tr>
            }
        </thread>
    </table>
</EditForm>

@code {
    private TempPW tmppw = new TempPW();
    private GlobalForm form = new GlobalForm();
    private List<TempPW> pwds;
    private int searchcode;
    [Parameter]
    public string Task { get; set; }
    [Parameter]
    public string ID { get; set; }

    protected override void OnInitialized()
    {
        GetInfoFromDB();
        Random rng = new Random();
        tmppw.Code = rng.Next(100000, 999999);
    }

    protected void GetInfoFromDB()
    {
        pwds = db.TempPWs.OrderBy(x => x.Code).ToList();
    }

    protected void AddPW(TempPW pw)
    {
        pw.Password = EncryptionService.EncodeString(pw.Password);
        pw.DateTimeCreated = DateTime.Now;
        pw.DateTimeExpiry = pw.DateTimeCreated.AddDays(5);
        db.TempPWs.Add(pw);
        db.SaveChanges();
        nav.NavigateTo("/admin/AddPassword", true);
    }

    protected void DeletePW(TempPW pw)
    {
        db.TempPWs.Remove(pw);
        db.SaveChanges();
        nav.NavigateTo("/admin/AddPassword", true);
    }
    protected void EditPW(TempPW pw)
    {
        nav.NavigateTo($"/admin/AddPassword/edit/{pw.ID}", true);
    }

    protected void UpdatePW(TempPW pw)
    {
        db.Update(pw);
        db.SaveChanges();
        nav.NavigateTo("/admin/AddPassword", true);
    }

    protected void EmailDetails(TempPW pw)
    {
        string[] users = pw.Access.Split(",");
        List<string> emails = new List<string>();
        foreach (string user in users)
        {
            emails.Add(AD.GetEmail(user));
        }
    }
    protected void FilterList()
    {
        pwds = pwds.FindAll(x => x.Code == searchcode);
    }
}